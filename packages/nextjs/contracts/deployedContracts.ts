/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    SVGBuilder: {
      address: "0xDc1b57A1A2698ab90521b716e9C63C00B4d9584d",
      abi: [
        {
          type: "function",
          name: "generateSVG",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_tokenData",
              type: "tuple",
              internalType: "struct SVGBuilder.TokenData",
              components: [
                {
                  name: "ogImage",
                  type: "tuple",
                  internalType: "struct SVGBuilder.ogImageData",
                  components: [
                    {
                      name: "collection",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "tokenId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "ercType",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "imageURL",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "height",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "width",
                      type: "uint16",
                      internalType: "uint16",
                    },
                  ],
                },
                {
                  name: "accessories",
                  type: "tuple[]",
                  internalType: "struct SVGBuilder.Accessory[]",
                  components: [
                    {
                      name: "accessoryId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "imageURL",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "height",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "width",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "x",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "y",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "isVisible",
                      type: "bool",
                      internalType: "bool",
                    },
                  ],
                },
                {
                  name: "previewImageURL",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
            {
              name: "accessoriesCallData",
              type: "tuple[]",
              internalType: "struct SVGBuilder.AccessoryCallData[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalSupply",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountMinted",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountPerTokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "traitType",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "value",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
            {
              name: "isOwner",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
      ],
      inheritedFunctions: {},
    },
    BasedDerivatives: {
      address: "0x744f1532597e943D0604e56cee2A9D68d543B2e3",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "symbol",
              type: "string",
              internalType: "string",
            },
            {
              name: "_beneficiary",
              type: "address",
              internalType: "address payable",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "accessoryCount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accessoryData",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "accessoryId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "totalSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amountMinted",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amountPerTokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "traitType",
              type: "string",
              internalType: "string",
            },
            {
              name: "value",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accessoryImageURL",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accessoryMintingParams",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "accessoryNFTCollection",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "mintingFee",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "gateAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "feeAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "gateAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "ercGateType",
              type: "uint16",
              internalType: "uint16",
            },
            {
              name: "royalty",
              type: "uint16",
              internalType: "uint16",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "addAccessoriesToDerivative",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_accessories",
              type: "tuple[]",
              internalType: "struct SVGBuilder.Accessory[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "x",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "y",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "isVisible",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addAccessory",
          inputs: [
            {
              name: "imageURL",
              type: "string",
              internalType: "string",
            },
            {
              name: "accessoryDataInput",
              type: "tuple",
              internalType: "struct SVGBuilder.AccessoryCallData",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalSupply",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountMinted",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountPerTokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "traitType",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "value",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
            {
              name: "mintingParamsInput",
              type: "tuple",
              internalType: "struct SVGBuilder.AccessoryMintingParams",
              components: [
                {
                  name: "accessoryNFTCollection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "mintingFee",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "gateAmount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "feeAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "gateAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "ercGateType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "royalty",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "deleteAndAddAccessory",
          inputs: [
            {
              name: "accessoryId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "imageURL",
              type: "string",
              internalType: "string",
            },
            {
              name: "accessoryDataInput",
              type: "tuple",
              internalType: "struct SVGBuilder.AccessoryCallData",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalSupply",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountMinted",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountPerTokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "traitType",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "value",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
            {
              name: "mintingParamsInput",
              type: "tuple",
              internalType: "struct SVGBuilder.AccessoryMintingParams",
              components: [
                {
                  name: "accessoryNFTCollection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "mintingFee",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "gateAmount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "feeAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "gateAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "ercGateType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "royalty",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "editBasedDerivative",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "accessories",
              type: "tuple[]",
              internalType: "struct SVGBuilder.Accessory[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "x",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "y",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "isVisible",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "editOGImage",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_ogImage",
              type: "tuple",
              internalType: "struct SVGBuilder.ogImageData",
              components: [
                {
                  name: "collection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "ercType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getApproved",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalFeeForAccessories",
          inputs: [
            {
              name: "accessories",
              type: "tuple[]",
              internalType: "struct SVGBuilder.Accessory[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "x",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "y",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "isVisible",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "mintBasedDerivative",
          inputs: [
            {
              name: "_ogImage",
              type: "tuple",
              internalType: "struct SVGBuilder.ogImageData",
              components: [
                {
                  name: "collection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "ercType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
            {
              name: "_accessories",
              type: "tuple[]",
              internalType: "struct SVGBuilder.Accessory[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "x",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "y",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "isVisible",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerOf",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "toggleAccessoryOnOff",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_accessoryId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_isVisible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "tokenData",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "ogImage",
              type: "tuple",
              internalType: "struct SVGBuilder.ogImageData",
              components: [
                {
                  name: "collection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "ercType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
            {
              name: "previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updatePayableAddy",
          inputs: [
            {
              name: "_beneficiary",
              type: "address",
              internalType: "address payable",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ConsecutiveTransfer",
          inputs: [
            {
              name: "fromTokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "toTokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MetadataUpdate",
          inputs: [
            {
              name: "_tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AccessoriesMustUseSamePayment",
          inputs: [],
        },
        {
          type: "error",
          name: "AccessoryLimitReached",
          inputs: [],
        },
        {
          type: "error",
          name: "AccessoryURLAlreadySet",
          inputs: [],
        },
        {
          type: "error",
          name: "ApprovalCallerNotOwnerNorApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "ApprovalQueryForNonexistentToken",
          inputs: [],
        },
        {
          type: "error",
          name: "BalanceQueryForZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidAccessory",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidTokenType",
          inputs: [],
        },
        {
          type: "error",
          name: "MintERC2309QuantityExceedsLimit",
          inputs: [],
        },
        {
          type: "error",
          name: "MintToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "MintZeroQuantity",
          inputs: [],
        },
        {
          type: "error",
          name: "NonExistentToken",
          inputs: [],
        },
        {
          type: "error",
          name: "NotEnoughGateToken",
          inputs: [],
        },
        {
          type: "error",
          name: "NotEnoughPayment",
          inputs: [],
        },
        {
          type: "error",
          name: "NotOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnerQueryForNonexistentToken",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnershipNotInitializedForExtraData",
          inputs: [],
        },
        {
          type: "error",
          name: "TotalSupplyExceeded",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferCallerNotOwnerNorApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferFromIncorrectOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferToNonERC721ReceiverImplementer",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "URIQueryForNonexistentToken",
          inputs: [],
        },
        {
          type: "error",
          name: "WrongParamData",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        approve: "contracts/1099/ERC721A.sol",
        balanceOf: "contracts/1099/ERC721A.sol",
        getApproved: "contracts/1099/ERC721A.sol",
        isApprovedForAll: "contracts/1099/ERC721A.sol",
        name: "contracts/1099/ERC721A.sol",
        ownerOf: "contracts/1099/ERC721A.sol",
        safeTransferFrom: "contracts/1099/ERC721A.sol",
        setApprovalForAll: "contracts/1099/ERC721A.sol",
        supportsInterface: "contracts/1099/ERC721A.sol",
        symbol: "contracts/1099/ERC721A.sol",
        tokenURI: "contracts/1099/ERC721A.sol",
        totalSupply: "contracts/1099/ERC721A.sol",
        transferFrom: "contracts/1099/ERC721A.sol",
        owner: "contracts/1099/Ownable.sol",
        renounceOwnership: "contracts/1099/Ownable.sol",
        transferOwnership: "contracts/1099/Ownable.sol",
      },
    },
  },
  84532: {
    SVGBuilder: {
      address: "0xDc1b57A1A2698ab90521b716e9C63C00B4d9584d",
      abi: [
        {
          type: "function",
          name: "generateSVG",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_tokenData",
              type: "tuple",
              internalType: "struct SVGBuilder.TokenData",
              components: [
                {
                  name: "ogImage",
                  type: "tuple",
                  internalType: "struct SVGBuilder.ogImageData",
                  components: [
                    {
                      name: "collection",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "tokenId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "ercType",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "imageURL",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "height",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "width",
                      type: "uint16",
                      internalType: "uint16",
                    },
                  ],
                },
                {
                  name: "accessories",
                  type: "tuple[]",
                  internalType: "struct SVGBuilder.Accessory[]",
                  components: [
                    {
                      name: "accessoryId",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "imageURL",
                      type: "string",
                      internalType: "string",
                    },
                    {
                      name: "height",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "width",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "x",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "y",
                      type: "uint16",
                      internalType: "uint16",
                    },
                    {
                      name: "isVisible",
                      type: "bool",
                      internalType: "bool",
                    },
                  ],
                },
                {
                  name: "previewImageURL",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
            {
              name: "accessoriesCallData",
              type: "tuple[]",
              internalType: "struct SVGBuilder.AccessoryCallData[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalSupply",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountMinted",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountPerTokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "traitType",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "value",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
            {
              name: "isOwner",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
      ],
      inheritedFunctions: {},
    },
    BasedDerivatives: {
      address: "0x744f1532597e943D0604e56cee2A9D68d543B2e3",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "symbol",
              type: "string",
              internalType: "string",
            },
            {
              name: "_beneficiary",
              type: "address",
              internalType: "address payable",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "accessoryCount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accessoryData",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "accessoryId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "totalSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amountMinted",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amountPerTokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "traitType",
              type: "string",
              internalType: "string",
            },
            {
              name: "value",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accessoryImageURL",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "accessoryMintingParams",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "accessoryNFTCollection",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "mintingFee",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "gateAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "feeAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "gateAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "ercGateType",
              type: "uint16",
              internalType: "uint16",
            },
            {
              name: "royalty",
              type: "uint16",
              internalType: "uint16",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "addAccessoriesToDerivative",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_accessories",
              type: "tuple[]",
              internalType: "struct SVGBuilder.Accessory[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "x",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "y",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "isVisible",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addAccessory",
          inputs: [
            {
              name: "imageURL",
              type: "string",
              internalType: "string",
            },
            {
              name: "accessoryDataInput",
              type: "tuple",
              internalType: "struct SVGBuilder.AccessoryCallData",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalSupply",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountMinted",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountPerTokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "traitType",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "value",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
            {
              name: "mintingParamsInput",
              type: "tuple",
              internalType: "struct SVGBuilder.AccessoryMintingParams",
              components: [
                {
                  name: "accessoryNFTCollection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "mintingFee",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "gateAmount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "feeAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "gateAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "ercGateType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "royalty",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "deleteAndAddAccessory",
          inputs: [
            {
              name: "accessoryId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "imageURL",
              type: "string",
              internalType: "string",
            },
            {
              name: "accessoryDataInput",
              type: "tuple",
              internalType: "struct SVGBuilder.AccessoryCallData",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalSupply",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountMinted",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "amountPerTokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "traitType",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "value",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
            {
              name: "mintingParamsInput",
              type: "tuple",
              internalType: "struct SVGBuilder.AccessoryMintingParams",
              components: [
                {
                  name: "accessoryNFTCollection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "mintingFee",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "gateAmount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "feeAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "gateAddress",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "ercGateType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "royalty",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "editBasedDerivative",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "accessories",
              type: "tuple[]",
              internalType: "struct SVGBuilder.Accessory[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "x",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "y",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "isVisible",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "editOGImage",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_ogImage",
              type: "tuple",
              internalType: "struct SVGBuilder.ogImageData",
              components: [
                {
                  name: "collection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "ercType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getApproved",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalFeeForAccessories",
          inputs: [
            {
              name: "accessories",
              type: "tuple[]",
              internalType: "struct SVGBuilder.Accessory[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "x",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "y",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "isVisible",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "mintBasedDerivative",
          inputs: [
            {
              name: "_ogImage",
              type: "tuple",
              internalType: "struct SVGBuilder.ogImageData",
              components: [
                {
                  name: "collection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "ercType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
            {
              name: "_accessories",
              type: "tuple[]",
              internalType: "struct SVGBuilder.Accessory[]",
              components: [
                {
                  name: "accessoryId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "x",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "y",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "isVisible",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerOf",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "toggleAccessoryOnOff",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_accessoryId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_isVisible",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "tokenData",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "ogImage",
              type: "tuple",
              internalType: "struct SVGBuilder.ogImageData",
              components: [
                {
                  name: "collection",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "tokenId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "ercType",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "imageURL",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "height",
                  type: "uint16",
                  internalType: "uint16",
                },
                {
                  name: "width",
                  type: "uint16",
                  internalType: "uint16",
                },
              ],
            },
            {
              name: "previewImageURL",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updatePayableAddy",
          inputs: [
            {
              name: "_beneficiary",
              type: "address",
              internalType: "address payable",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ConsecutiveTransfer",
          inputs: [
            {
              name: "fromTokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "toTokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MetadataUpdate",
          inputs: [
            {
              name: "_tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AccessoriesMustUseSamePayment",
          inputs: [],
        },
        {
          type: "error",
          name: "AccessoryLimitReached",
          inputs: [],
        },
        {
          type: "error",
          name: "AccessoryURLAlreadySet",
          inputs: [],
        },
        {
          type: "error",
          name: "ApprovalCallerNotOwnerNorApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "ApprovalQueryForNonexistentToken",
          inputs: [],
        },
        {
          type: "error",
          name: "BalanceQueryForZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidAccessory",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidTokenType",
          inputs: [],
        },
        {
          type: "error",
          name: "MintERC2309QuantityExceedsLimit",
          inputs: [],
        },
        {
          type: "error",
          name: "MintToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "MintZeroQuantity",
          inputs: [],
        },
        {
          type: "error",
          name: "NonExistentToken",
          inputs: [],
        },
        {
          type: "error",
          name: "NotEnoughGateToken",
          inputs: [],
        },
        {
          type: "error",
          name: "NotEnoughPayment",
          inputs: [],
        },
        {
          type: "error",
          name: "NotOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnerQueryForNonexistentToken",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnershipNotInitializedForExtraData",
          inputs: [],
        },
        {
          type: "error",
          name: "TotalSupplyExceeded",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferCallerNotOwnerNorApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferFromIncorrectOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferToNonERC721ReceiverImplementer",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "URIQueryForNonexistentToken",
          inputs: [],
        },
        {
          type: "error",
          name: "WrongParamData",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        approve: "contracts/1099/ERC721A.sol",
        balanceOf: "contracts/1099/ERC721A.sol",
        getApproved: "contracts/1099/ERC721A.sol",
        isApprovedForAll: "contracts/1099/ERC721A.sol",
        name: "contracts/1099/ERC721A.sol",
        ownerOf: "contracts/1099/ERC721A.sol",
        safeTransferFrom: "contracts/1099/ERC721A.sol",
        setApprovalForAll: "contracts/1099/ERC721A.sol",
        supportsInterface: "contracts/1099/ERC721A.sol",
        symbol: "contracts/1099/ERC721A.sol",
        tokenURI: "contracts/1099/ERC721A.sol",
        totalSupply: "contracts/1099/ERC721A.sol",
        transferFrom: "contracts/1099/ERC721A.sol",
        owner: "contracts/1099/Ownable.sol",
        renounceOwnership: "contracts/1099/Ownable.sol",
        transferOwnership: "contracts/1099/Ownable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
