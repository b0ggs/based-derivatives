/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    SVGBuilder: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "collection",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "tokenId",
                      type: "uint256",
                    },
                    {
                      internalType: "uint16",
                      name: "ercType",
                      type: "uint16",
                    },
                    {
                      internalType: "string",
                      name: "imageURL",
                      type: "string",
                    },
                    {
                      internalType: "uint16",
                      name: "height",
                      type: "uint16",
                    },
                    {
                      internalType: "uint16",
                      name: "width",
                      type: "uint16",
                    },
                  ],
                  internalType: "struct SVGBuilder.ogImageData",
                  name: "ogImage",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "accessoryId",
                      type: "uint256",
                    },
                    {
                      internalType: "string",
                      name: "imageURL",
                      type: "string",
                    },
                    {
                      internalType: "uint16",
                      name: "height",
                      type: "uint16",
                    },
                    {
                      internalType: "uint16",
                      name: "width",
                      type: "uint16",
                    },
                    {
                      internalType: "uint16",
                      name: "x",
                      type: "uint16",
                    },
                    {
                      internalType: "uint16",
                      name: "y",
                      type: "uint16",
                    },
                  ],
                  internalType: "struct SVGBuilder.Accessory[]",
                  name: "accessories",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SVGBuilder.TokenData",
              name: "_tokenData",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "accessoryId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalSupply",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amountMinted",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "traitType",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "value",
                  type: "string",
                },
              ],
              internalType: "struct SVGBuilder.AccessoryData[]",
              name: "accessoriesData",
              type: "tuple[]",
            },
          ],
          name: "generateSVG",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    BasedDerivatives: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "address payable",
              name: "_beneficiary",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AccessoriesMustUseSamePayment",
          type: "error",
        },
        {
          inputs: [],
          name: "AccessoryURLAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "ApprovalCallerNotOwnerNorApproved",
          type: "error",
        },
        {
          inputs: [],
          name: "ApprovalQueryForNonexistentToken",
          type: "error",
        },
        {
          inputs: [],
          name: "BalanceQueryForZeroAddress",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidAccessory",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidTokenType",
          type: "error",
        },
        {
          inputs: [],
          name: "MintERC2309QuantityExceedsLimit",
          type: "error",
        },
        {
          inputs: [],
          name: "MintToZeroAddress",
          type: "error",
        },
        {
          inputs: [],
          name: "MintZeroQuantity",
          type: "error",
        },
        {
          inputs: [],
          name: "NonExistentToken",
          type: "error",
        },
        {
          inputs: [],
          name: "NotEnoughGateToken",
          type: "error",
        },
        {
          inputs: [],
          name: "NotEnoughPayment",
          type: "error",
        },
        {
          inputs: [],
          name: "NotOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "OwnerQueryForNonexistentToken",
          type: "error",
        },
        {
          inputs: [],
          name: "OwnershipNotInitializedForExtraData",
          type: "error",
        },
        {
          inputs: [],
          name: "TransferCallerNotOwnerNorApproved",
          type: "error",
        },
        {
          inputs: [],
          name: "TransferFromIncorrectOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "TransferToNonERC721ReceiverImplementer",
          type: "error",
        },
        {
          inputs: [],
          name: "TransferToZeroAddress",
          type: "error",
        },
        {
          inputs: [],
          name: "URIQueryForNonexistentToken",
          type: "error",
        },
        {
          inputs: [],
          name: "WrongParamData",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "fromTokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "toTokenId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "ConsecutiveTransfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "MetadataUpdate",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "accessoryCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "accessoryData",
          outputs: [
            {
              internalType: "uint256",
              name: "accessoryId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalSupply",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amountMinted",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "traitType",
              type: "string",
            },
            {
              internalType: "string",
              name: "value",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "accessoryImageURL",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "accessoryMintingParams",
          outputs: [
            {
              internalType: "address",
              name: "accessoryNFTCollection",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "mintingFee",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "gateAmount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "feeAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "gateAddress",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "ercGateType",
              type: "uint16",
            },
            {
              internalType: "uint16",
              name: "royalty",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "imageURL",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "accessoryId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalSupply",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amountMinted",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "traitType",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "value",
                  type: "string",
                },
              ],
              internalType: "struct SVGBuilder.AccessoryData",
              name: "accessoryDataInput",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "accessoryNFTCollection",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "mintingFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "gateAmount",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "feeAddress",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "gateAddress",
                  type: "address",
                },
                {
                  internalType: "uint16",
                  name: "ercGateType",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "royalty",
                  type: "uint16",
                },
              ],
              internalType: "struct SVGBuilder.AccessoryMintingParams",
              name: "mintingParamsInput",
              type: "tuple",
            },
          ],
          name: "addAccessory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "deleteAccessory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "accessoryId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "imageURL",
                  type: "string",
                },
                {
                  internalType: "uint16",
                  name: "height",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "width",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "x",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "y",
                  type: "uint16",
                },
              ],
              internalType: "struct SVGBuilder.Accessory[]",
              name: "accessories",
              type: "tuple[]",
            },
          ],
          name: "editBasedDerivative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "accessoryId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "imageURL",
                  type: "string",
                },
                {
                  internalType: "uint16",
                  name: "height",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "width",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "x",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "y",
                  type: "uint16",
                },
              ],
              internalType: "struct SVGBuilder.Accessory[]",
              name: "accessories",
              type: "tuple[]",
            },
          ],
          name: "getTotalFeeForAccessories",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "collection",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "uint16",
                  name: "ercType",
                  type: "uint16",
                },
                {
                  internalType: "string",
                  name: "imageURL",
                  type: "string",
                },
                {
                  internalType: "uint16",
                  name: "height",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "width",
                  type: "uint16",
                },
              ],
              internalType: "struct SVGBuilder.ogImageData",
              name: "_ogImage",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "accessoryId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "imageURL",
                  type: "string",
                },
                {
                  internalType: "uint16",
                  name: "height",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "width",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "x",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "y",
                  type: "uint16",
                },
              ],
              internalType: "struct SVGBuilder.Accessory[]",
              name: "_accessories",
              type: "tuple[]",
            },
          ],
          name: "mintBasedDerivative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "setApprovalForAll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "tokenData",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "collection",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "uint16",
                  name: "ercType",
                  type: "uint16",
                },
                {
                  internalType: "string",
                  name: "imageURL",
                  type: "string",
                },
                {
                  internalType: "uint16",
                  name: "height",
                  type: "uint16",
                },
                {
                  internalType: "uint16",
                  name: "width",
                  type: "uint16",
                },
              ],
              internalType: "struct SVGBuilder.ogImageData",
              name: "ogImage",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_beneficiary",
              type: "address",
            },
          ],
          name: "updatePayableAddy",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        approve: "contracts/1099/ERC721A.sol",
        balanceOf: "contracts/1099/ERC721A.sol",
        getApproved: "contracts/1099/ERC721A.sol",
        isApprovedForAll: "contracts/1099/ERC721A.sol",
        name: "contracts/1099/ERC721A.sol",
        ownerOf: "contracts/1099/ERC721A.sol",
        safeTransferFrom: "contracts/1099/ERC721A.sol",
        setApprovalForAll: "contracts/1099/ERC721A.sol",
        supportsInterface: "contracts/1099/ERC721A.sol",
        symbol: "contracts/1099/ERC721A.sol",
        tokenURI: "contracts/1099/ERC721A.sol",
        totalSupply: "contracts/1099/ERC721A.sol",
        transferFrom: "contracts/1099/ERC721A.sol",
        owner:
          "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        renounceOwnership:
          "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        transferOwnership:
          "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
